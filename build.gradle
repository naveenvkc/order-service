plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.17.3")
	set('lombokVersion', "1.18.32")
	set('springCloudVersion', "2024.0.1")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"

	//implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4"

	// -- Util --
	implementation "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	runtimeOnly 'org.postgresql:postgresql'
	//runtimeOnly 'org.postgresql:r2dbc-postgresql'
	runtimeOnly 'org.flywaydb:flyway-core'
	//runtimeOnly 'org.springframework:spring-jdbc'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql'

	//implementation("org.springframework.data:spring-data-jdbc:3.4.4")
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	//testImplementation 'org.testcontainers:r2dbc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	testImplementation("org.springframework.cloud:spring-cloud-stream") {
//		artifact {
//			name = "spring-cloud-stream"
//			extension = "jar"
//			type ="test-jar"
//			classifier = "test-binder"
//		}
//	}
}

bootBuildImage {
	imageName = "${project.name}"
	environment = [
			//'HTTP_PROXY' : 'http.docker.internal:3128',
			//'HTTPS_PROXY' : 'http.docker.internal:3128',
			'BP_JVM_VERSION' : '17.*'
	]
	docker {
		publishRegistry {
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	exclude 'com/polarbookshop/orderservice/**'
	useJUnitPlatform()
}
